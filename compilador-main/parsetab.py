
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEMODULOAND ARRAY ASSIGN BEGIN BOOL BREAK CASE CHAR COLON COMMA CONST CONTINUE DEFAULT DIVIDE DOT DOUBLE ELLIPSIS ELSE ELSE EMPTY END EQUAL FLOAT FOR FUNCTION GREATER ID IF IF IN INT INTEGER LBRACE LBRACKETS LESS LPAREN MAIN MAIOR MENOR MINUS MODULO MULTI_LINE_COMMENT NOT NUMERO OF OR PLUS PRINT RANGE RBRACE RBRACKETS READ REAL RECORD RETURN RPAREN SCANF SEMICOLON SINGLE_LINE_COMMENT STRUCT SWITCH THEN TIMES TYPE VAR VOID VSTRING WHILE WHILE WRITEprogram : declarationdeclaration : declaration_variable\n                   | declaration_function\n                   | declaration_structure\n                   | commentdeclaration_variable : type ID \n                           | ID EQUAL NUMERO\n                           | ID EQUAL ID\n                           | ID EQUAL VSTRING\n                           | ID EQUAL expression\n                           | type ID EQUAL expression\n                           | type ID EQUAL NUMERO\n                           | type ID EQUAL ID\n                           | type ID EQUAL VSTRING\n                           | type ID EQUAL LPAREN expression RPARENtype : INT\n            | FLOAT\n            | DOUBLE\n            | CHAR\n            | BOOLdeclaration_function : type ID LPAREN parameters RPAREN blockparameters : parameter\n                  | parameter COMMA parameters\n                  | emptyparameter : type ID\n                 | type ID LBRACKETS RBRACKETS\n                 | type ELLIPSIS IDblock : LBRACE declaration RBRACEcomment : SINGLE_LINE_COMMENT\n               | MULTI_LINE_COMMENTexpression : atribuicaoatribuicao : ID EQUAL expressao_logica\n                  | ID PLUS EQUAL expressao_logica\n                  | ID MINUS EQUAL expressao_logica\n                  | ID TIMES EQUAL expressao_logica\n                  | ID DIVIDE EQUAL expressao_logica\n                  | ID MODULO EQUAL expressao_logica\n                  | ID AND EQUAL expressao_logica\n                  | ID OR EQUAL expressao_logicadeclaration_structure : if_structure\n                        | while_structure\n                        | for_structure\n                        | switch_structure\n                        | break_structure\n                        | continue_structure\n                        | return_structureif_structure : IF LPAREN expression RPAREN block\n                    | IF LPAREN expression RPAREN block ELSE blockempty :while_structure : WHILE LPAREN expression RPAREN blockfor_structure : FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN blockswitch_structure : SWITCH LPAREN expression RPAREN case_listbreak_structure : BREAKcontinue_structure : CONTINUEreturn_structure : RETURN expressioncase_list : case_declaration_starcase_declaration_star : empty\n                            | case_declaration_star case_declarationcase_declaration : CASE expression COLON block\n                       | DEFAULT COLON blockarray : ID LBRACKETS expression RBRACKETS\n             | ID LBRACKETS RBRACKETSexpressao_logica : expressao_relacional\n                        | NOT expressao_relacional\n                        | expressao_logica AND expressao_relacional\n                        | expressao_logica OR expressao_relacionalexpressao_relacional : expressao_aritmetica\n                             | expressao_aritmetica MAIOR expressao_aritmetica\n                             | expressao_aritmetica MAIOR EQUAL expressao_aritmetica\n                             | expressao_aritmetica MENOR expressao_aritmetica\n                             | expressao_aritmetica MENOR EQUAL expressao_aritmetica\n                             | expressao_aritmetica NOT EQUAL expressao_aritmetica\n                             | expressao_aritmetica EQUAL EQUAL expressao_aritmeticaexpressao_aritmetica : expressao_multiplicativa \n                             | expressao_aritmetica PLUS expressao_aritmetica\n                             | expressao_aritmetica MINUS expressao_aritmeticaexpressao_multiplicativa : expressao_unaria\n                                 | expressao_multiplicativa TIMES expressao_multiplicativa\n                                 | expressao_multiplicativa DIVIDE expressao_multiplicativa\n                                 | expressao_multiplicativa MODULO expressao_multiplicativa expressao_unaria : expressao_postfix\n                        | PLUS expressao_unaria\n                        | MINUS expressao_unariaexpressao_postfix : primaria\n                         | primaria LBRACKETS expression RBRACKETS\n                         | primaria LPAREN argumentos RPAREN\n                         | primaria DOT ID argumentos : array\n                  | emptyprimaria : ID\n                | NUMERO\n                | VSTRING\n                | LPAREN expression RPAREN'
    
_lr_action_items = {'ID':([0,7,18,19,20,21,22,29,31,32,33,34,35,39,49,61,62,68,73,76,77,81,84,85,86,87,88,89,90,93,97,103,104,106,108,110,111,112,113,114,117,118,119,135,137,142,143,145,146,171,],[8,30,-16,-17,-18,-19,-20,38,41,38,38,38,38,57,70,38,92,38,70,70,70,38,70,70,70,70,70,70,70,130,8,70,70,70,70,70,70,70,70,70,38,156,157,38,38,70,70,70,70,38,]),'SINGLE_LINE_COMMENT':([0,97,],[16,16,]),'MULTI_LINE_COMMENT':([0,97,],[17,17,]),'INT':([0,40,95,97,],[18,18,18,18,]),'FLOAT':([0,40,95,97,],[19,19,19,19,]),'DOUBLE':([0,40,95,97,],[20,20,20,20,]),'CHAR':([0,40,95,97,],[21,21,21,21,]),'BOOL':([0,40,95,97,],[22,22,22,22,]),'IF':([0,97,],[23,23,]),'WHILE':([0,97,],[24,24,]),'FOR':([0,97,],[25,25,]),'SWITCH':([0,97,],[26,26,]),'BREAK':([0,97,],[27,27,]),'CONTINUE':([0,97,],[28,28,]),'RETURN':([0,97,],[29,29,]),'$end':([1,2,3,4,5,6,9,10,11,12,13,14,15,16,17,27,28,30,36,37,41,42,43,44,57,58,59,60,69,70,71,72,74,75,78,79,80,82,83,96,98,100,101,102,105,115,116,121,122,123,124,125,126,127,128,131,136,139,140,141,144,147,148,149,150,151,157,158,160,161,165,166,167,168,169,170,174,177,178,],[0,-1,-2,-3,-4,-5,-40,-41,-42,-43,-44,-45,-46,-29,-30,-53,-54,-6,-55,-31,-8,-7,-9,-10,-13,-11,-12,-14,-49,-90,-32,-63,-67,-74,-77,-81,-84,-91,-92,-47,-50,-52,-56,-57,-64,-82,-83,-33,-34,-35,-36,-37,-38,-39,-15,-21,-58,-65,-66,-68,-70,-75,-76,-78,-79,-80,-87,-93,-48,-28,-69,-73,-71,-72,-85,-86,-60,-51,-59,]),'RBRACE':([3,4,5,6,9,10,11,12,13,14,15,16,17,27,28,30,36,37,41,42,43,44,57,58,59,60,69,70,71,72,74,75,78,79,80,82,83,96,98,100,101,102,105,115,116,121,122,123,124,125,126,127,128,131,134,136,139,140,141,144,147,148,149,150,151,157,158,160,161,165,166,167,168,169,170,174,177,178,],[-2,-3,-4,-5,-40,-41,-42,-43,-44,-45,-46,-29,-30,-53,-54,-6,-55,-31,-8,-7,-9,-10,-13,-11,-12,-14,-49,-90,-32,-63,-67,-74,-77,-81,-84,-91,-92,-47,-50,-52,-56,-57,-64,-82,-83,-33,-34,-35,-36,-37,-38,-39,-15,-21,161,-58,-65,-66,-68,-70,-75,-76,-78,-79,-80,-87,-93,-48,-28,-69,-73,-71,-72,-85,-86,-60,-51,-59,]),'EQUAL':([8,30,38,41,50,51,52,53,54,55,56,57,70,74,75,78,79,80,82,83,106,107,108,109,115,116,147,148,149,150,151,157,158,169,170,],[31,39,49,49,84,85,86,87,88,89,90,49,-90,107,-74,-77,-81,-84,-91,-92,142,143,145,146,-82,-83,-75,-76,-78,-79,-80,-87,-93,-85,-86,]),'ELLIPSIS':([18,19,20,21,22,62,],[-16,-17,-18,-19,-20,93,]),'LPAREN':([23,24,25,26,30,39,49,70,73,76,77,80,82,83,84,85,86,87,88,89,90,103,104,106,108,110,111,112,113,114,142,143,145,146,158,],[32,33,34,35,40,61,81,-90,81,81,81,118,-91,-92,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-93,]),'NUMERO':([31,39,49,73,76,77,84,85,86,87,88,89,90,103,104,106,108,110,111,112,113,114,142,143,145,146,],[42,59,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'VSTRING':([31,39,49,73,76,77,84,85,86,87,88,89,90,103,104,106,108,110,111,112,113,114,142,143,145,146,],[43,60,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'RPAREN':([37,40,45,46,48,63,64,65,70,71,72,74,75,78,79,80,82,83,91,92,95,105,115,116,118,120,121,122,123,124,125,126,127,130,132,139,140,141,144,147,148,149,150,151,153,154,155,157,158,159,162,165,166,167,168,169,170,176,179,],[-31,-49,66,67,69,94,-22,-24,-90,-32,-63,-67,-74,-77,-81,-84,-91,-92,128,-25,-49,-64,-82,-83,-49,158,-33,-34,-35,-36,-37,-38,-39,-27,-23,-65,-66,-68,-70,-75,-76,-78,-79,-80,170,-88,-89,-87,-93,-26,172,-69,-73,-71,-72,-85,-86,-62,-61,]),'SEMICOLON':([37,47,70,71,72,74,75,78,79,80,82,83,99,105,115,116,121,122,123,124,125,126,127,139,140,141,144,147,148,149,150,151,157,158,165,166,167,168,169,170,],[-31,68,-90,-32,-63,-67,-74,-77,-81,-84,-91,-92,135,-64,-82,-83,-33,-34,-35,-36,-37,-38,-39,-65,-66,-68,-70,-75,-76,-78,-79,-80,-87,-93,-69,-73,-71,-72,-85,-86,]),'RBRACKETS':([37,70,71,72,74,75,78,79,80,82,83,105,115,116,121,122,123,124,125,126,127,129,139,140,141,144,147,148,149,150,151,152,157,158,165,166,167,168,169,170,171,175,],[-31,-90,-32,-63,-67,-74,-77,-81,-84,-91,-92,-64,-82,-83,-33,-34,-35,-36,-37,-38,-39,159,-65,-66,-68,-70,-75,-76,-78,-79,-80,169,-87,-93,-69,-73,-71,-72,-85,-86,176,179,]),'COLON':([37,70,71,72,74,75,78,79,80,82,83,105,115,116,121,122,123,124,125,126,127,138,139,140,141,144,147,148,149,150,151,157,158,163,165,166,167,168,169,170,],[-31,-90,-32,-63,-67,-74,-77,-81,-84,-91,-92,-64,-82,-83,-33,-34,-35,-36,-37,-38,-39,164,-65,-66,-68,-70,-75,-76,-78,-79,-80,-87,-93,173,-69,-73,-71,-72,-85,-86,]),'PLUS':([38,41,49,57,70,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,103,104,106,108,110,111,112,113,114,115,116,141,142,143,144,145,146,147,148,149,150,151,157,158,165,166,167,168,169,170,],[50,50,76,50,-90,76,110,-74,76,76,-77,-81,-84,-91,-92,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-82,-83,110,76,76,110,76,76,-75,-76,-78,-79,-80,-87,-93,110,110,110,110,-85,-86,]),'MINUS':([38,41,49,57,70,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,103,104,106,108,110,111,112,113,114,115,116,141,142,143,144,145,146,147,148,149,150,151,157,158,165,166,167,168,169,170,],[51,51,77,51,-90,77,111,-74,77,77,-77,-81,-84,-91,-92,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-82,-83,111,77,77,111,77,77,-75,-76,-78,-79,-80,-87,-93,111,111,111,111,-85,-86,]),'TIMES':([38,41,57,70,75,78,79,80,82,83,115,116,149,150,151,157,158,169,170,],[52,52,52,-90,112,-77,-81,-84,-91,-92,-82,-83,-78,-79,-80,-87,-93,-85,-86,]),'DIVIDE':([38,41,57,70,75,78,79,80,82,83,115,116,149,150,151,157,158,169,170,],[53,53,53,-90,113,-77,-81,-84,-91,-92,-82,-83,-78,-79,-80,-87,-93,-85,-86,]),'MODULO':([38,41,57,70,75,78,79,80,82,83,115,116,149,150,151,157,158,169,170,],[54,54,54,-90,114,-77,-81,-84,-91,-92,-82,-83,-78,-79,-80,-87,-93,-85,-86,]),'AND':([38,41,57,70,71,72,74,75,78,79,80,82,83,105,115,116,121,122,123,124,125,126,127,139,140,141,144,147,148,149,150,151,157,158,165,166,167,168,169,170,],[55,55,55,-90,103,-63,-67,-74,-77,-81,-84,-91,-92,-64,-82,-83,103,103,103,103,103,103,103,-65,-66,-68,-70,-75,-76,-78,-79,-80,-87,-93,-69,-73,-71,-72,-85,-86,]),'OR':([38,41,57,70,71,72,74,75,78,79,80,82,83,105,115,116,121,122,123,124,125,126,127,139,140,141,144,147,148,149,150,151,157,158,165,166,167,168,169,170,],[56,56,56,-90,104,-63,-67,-74,-77,-81,-84,-91,-92,-64,-82,-83,104,104,104,104,104,104,104,-65,-66,-68,-70,-75,-76,-78,-79,-80,-87,-93,-69,-73,-71,-72,-85,-86,]),'NOT':([49,70,74,75,78,79,80,82,83,84,85,86,87,88,89,90,115,116,147,148,149,150,151,157,158,169,170,],[73,-90,109,-74,-77,-81,-84,-91,-92,73,73,73,73,73,73,73,-82,-83,-75,-76,-78,-79,-80,-87,-93,-85,-86,]),'COMMA':([64,92,130,159,],[95,-25,-27,-26,]),'LBRACE':([66,67,94,133,164,172,173,],[97,97,97,97,97,97,97,]),'CASE':([69,101,102,136,161,174,178,],[-49,137,-57,-58,-28,-60,-59,]),'DEFAULT':([69,101,102,136,161,174,178,],[-49,138,-57,-58,-28,-60,-59,]),'LBRACKETS':([70,80,82,83,92,156,158,],[-90,117,-91,-92,129,171,-93,]),'DOT':([70,80,82,83,158,],[-90,119,-91,-92,-93,]),'MAIOR':([70,74,75,78,79,80,82,83,115,116,147,148,149,150,151,157,158,169,170,],[-90,106,-74,-77,-81,-84,-91,-92,-82,-83,-75,-76,-78,-79,-80,-87,-93,-85,-86,]),'MENOR':([70,74,75,78,79,80,82,83,115,116,147,148,149,150,151,157,158,169,170,],[-90,108,-74,-77,-81,-84,-91,-92,-82,-83,-75,-76,-78,-79,-80,-87,-93,-85,-86,]),'ELSE':([96,161,],[133,-28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration':([0,97,],[2,134,]),'declaration_variable':([0,97,],[3,3,]),'declaration_function':([0,97,],[4,4,]),'declaration_structure':([0,97,],[5,5,]),'comment':([0,97,],[6,6,]),'type':([0,40,95,97,],[7,62,62,7,]),'if_structure':([0,97,],[9,9,]),'while_structure':([0,97,],[10,10,]),'for_structure':([0,97,],[11,11,]),'switch_structure':([0,97,],[12,12,]),'break_structure':([0,97,],[13,13,]),'continue_structure':([0,97,],[14,14,]),'return_structure':([0,97,],[15,15,]),'expression':([29,31,32,33,34,35,39,61,68,81,117,135,137,171,],[36,44,45,46,47,48,58,91,99,120,152,162,163,175,]),'atribuicao':([29,31,32,33,34,35,39,61,68,81,117,135,137,171,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'parameters':([40,95,],[63,132,]),'parameter':([40,95,],[64,64,]),'empty':([40,69,95,118,],[65,102,65,155,]),'expressao_logica':([49,84,85,86,87,88,89,90,],[71,121,122,123,124,125,126,127,]),'expressao_relacional':([49,73,84,85,86,87,88,89,90,103,104,],[72,105,72,72,72,72,72,72,72,139,140,]),'expressao_aritmetica':([49,73,84,85,86,87,88,89,90,103,104,106,108,110,111,142,143,145,146,],[74,74,74,74,74,74,74,74,74,74,74,141,144,147,148,165,166,167,168,]),'expressao_multiplicativa':([49,73,84,85,86,87,88,89,90,103,104,106,108,110,111,112,113,114,142,143,145,146,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,149,150,151,75,75,75,75,]),'expressao_unaria':([49,73,76,77,84,85,86,87,88,89,90,103,104,106,108,110,111,112,113,114,142,143,145,146,],[78,78,115,116,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'expressao_postfix':([49,73,76,77,84,85,86,87,88,89,90,103,104,106,108,110,111,112,113,114,142,143,145,146,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'primaria':([49,73,76,77,84,85,86,87,88,89,90,103,104,106,108,110,111,112,113,114,142,143,145,146,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'block':([66,67,94,133,164,172,173,],[96,98,131,160,174,177,178,]),'case_list':([69,],[100,]),'case_declaration_star':([69,],[101,]),'case_declaration':([101,],[136,]),'argumentos':([118,],[153,]),'array':([118,],[154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration','program',1,'p_program','sintatico.py',17),
  ('declaration -> declaration_variable','declaration',1,'p_declaration','sintatico.py',22),
  ('declaration -> declaration_function','declaration',1,'p_declaration','sintatico.py',23),
  ('declaration -> declaration_structure','declaration',1,'p_declaration','sintatico.py',24),
  ('declaration -> comment','declaration',1,'p_declaration','sintatico.py',25),
  ('declaration_variable -> type ID','declaration_variable',2,'p_declaration_variable','sintatico.py',30),
  ('declaration_variable -> ID EQUAL NUMERO','declaration_variable',3,'p_declaration_variable','sintatico.py',31),
  ('declaration_variable -> ID EQUAL ID','declaration_variable',3,'p_declaration_variable','sintatico.py',32),
  ('declaration_variable -> ID EQUAL VSTRING','declaration_variable',3,'p_declaration_variable','sintatico.py',33),
  ('declaration_variable -> ID EQUAL expression','declaration_variable',3,'p_declaration_variable','sintatico.py',34),
  ('declaration_variable -> type ID EQUAL expression','declaration_variable',4,'p_declaration_variable','sintatico.py',35),
  ('declaration_variable -> type ID EQUAL NUMERO','declaration_variable',4,'p_declaration_variable','sintatico.py',36),
  ('declaration_variable -> type ID EQUAL ID','declaration_variable',4,'p_declaration_variable','sintatico.py',37),
  ('declaration_variable -> type ID EQUAL VSTRING','declaration_variable',4,'p_declaration_variable','sintatico.py',38),
  ('declaration_variable -> type ID EQUAL LPAREN expression RPAREN','declaration_variable',6,'p_declaration_variable','sintatico.py',39),
  ('type -> INT','type',1,'p_type','sintatico.py',51),
  ('type -> FLOAT','type',1,'p_type','sintatico.py',52),
  ('type -> DOUBLE','type',1,'p_type','sintatico.py',53),
  ('type -> CHAR','type',1,'p_type','sintatico.py',54),
  ('type -> BOOL','type',1,'p_type','sintatico.py',55),
  ('declaration_function -> type ID LPAREN parameters RPAREN block','declaration_function',6,'p_declaration_function','sintatico.py',60),
  ('parameters -> parameter','parameters',1,'p_parameters','sintatico.py',65),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','sintatico.py',66),
  ('parameters -> empty','parameters',1,'p_parameters','sintatico.py',67),
  ('parameter -> type ID','parameter',2,'p_parameter','sintatico.py',77),
  ('parameter -> type ID LBRACKETS RBRACKETS','parameter',4,'p_parameter','sintatico.py',78),
  ('parameter -> type ELLIPSIS ID','parameter',3,'p_parameter','sintatico.py',79),
  ('block -> LBRACE declaration RBRACE','block',3,'p_block','sintatico.py',89),
  ('comment -> SINGLE_LINE_COMMENT','comment',1,'p_comment','sintatico.py',94),
  ('comment -> MULTI_LINE_COMMENT','comment',1,'p_comment','sintatico.py',95),
  ('expression -> atribuicao','expression',1,'p_expression','sintatico.py',100),
  ('atribuicao -> ID EQUAL expressao_logica','atribuicao',3,'p_atribuicao','sintatico.py',105),
  ('atribuicao -> ID PLUS EQUAL expressao_logica','atribuicao',4,'p_atribuicao','sintatico.py',106),
  ('atribuicao -> ID MINUS EQUAL expressao_logica','atribuicao',4,'p_atribuicao','sintatico.py',107),
  ('atribuicao -> ID TIMES EQUAL expressao_logica','atribuicao',4,'p_atribuicao','sintatico.py',108),
  ('atribuicao -> ID DIVIDE EQUAL expressao_logica','atribuicao',4,'p_atribuicao','sintatico.py',109),
  ('atribuicao -> ID MODULO EQUAL expressao_logica','atribuicao',4,'p_atribuicao','sintatico.py',110),
  ('atribuicao -> ID AND EQUAL expressao_logica','atribuicao',4,'p_atribuicao','sintatico.py',111),
  ('atribuicao -> ID OR EQUAL expressao_logica','atribuicao',4,'p_atribuicao','sintatico.py',112),
  ('declaration_structure -> if_structure','declaration_structure',1,'p_declaration_structure','sintatico.py',120),
  ('declaration_structure -> while_structure','declaration_structure',1,'p_declaration_structure','sintatico.py',121),
  ('declaration_structure -> for_structure','declaration_structure',1,'p_declaration_structure','sintatico.py',122),
  ('declaration_structure -> switch_structure','declaration_structure',1,'p_declaration_structure','sintatico.py',123),
  ('declaration_structure -> break_structure','declaration_structure',1,'p_declaration_structure','sintatico.py',124),
  ('declaration_structure -> continue_structure','declaration_structure',1,'p_declaration_structure','sintatico.py',125),
  ('declaration_structure -> return_structure','declaration_structure',1,'p_declaration_structure','sintatico.py',126),
  ('if_structure -> IF LPAREN expression RPAREN block','if_structure',5,'p_if_structure','sintatico.py',131),
  ('if_structure -> IF LPAREN expression RPAREN block ELSE block','if_structure',7,'p_if_structure','sintatico.py',132),
  ('empty -> <empty>','empty',0,'p_empty','lexico.py',133),
  ('while_structure -> WHILE LPAREN expression RPAREN block','while_structure',5,'p_while_structure','sintatico.py',140),
  ('for_structure -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block','for_structure',9,'p_for_structure','sintatico.py',145),
  ('switch_structure -> SWITCH LPAREN expression RPAREN case_list','switch_structure',5,'p_switch_structure','sintatico.py',150),
  ('break_structure -> BREAK','break_structure',1,'p_break_structure','sintatico.py',155),
  ('continue_structure -> CONTINUE','continue_structure',1,'p_continue_structure','sintatico.py',160),
  ('return_structure -> RETURN expression','return_structure',2,'p_return_structure','sintatico.py',165),
  ('case_list -> case_declaration_star','case_list',1,'p_case_list','sintatico.py',170),
  ('case_declaration_star -> empty','case_declaration_star',1,'p_case_declaration_star','sintatico.py',174),
  ('case_declaration_star -> case_declaration_star case_declaration','case_declaration_star',2,'p_case_declaration_star','sintatico.py',175),
  ('case_declaration -> CASE expression COLON block','case_declaration',4,'p_case_declaration','sintatico.py',182),
  ('case_declaration -> DEFAULT COLON block','case_declaration',3,'p_case_declaration','sintatico.py',183),
  ('array -> ID LBRACKETS expression RBRACKETS','array',4,'p_array','sintatico.py',191),
  ('array -> ID LBRACKETS RBRACKETS','array',3,'p_array','sintatico.py',192),
  ('expressao_logica -> expressao_relacional','expressao_logica',1,'p_expressao_logica','sintatico.py',200),
  ('expressao_logica -> NOT expressao_relacional','expressao_logica',2,'p_expressao_logica','sintatico.py',201),
  ('expressao_logica -> expressao_logica AND expressao_relacional','expressao_logica',3,'p_expressao_logica','sintatico.py',202),
  ('expressao_logica -> expressao_logica OR expressao_relacional','expressao_logica',3,'p_expressao_logica','sintatico.py',203),
  ('expressao_relacional -> expressao_aritmetica','expressao_relacional',1,'p_expressao_relacional','sintatico.py',213),
  ('expressao_relacional -> expressao_aritmetica MAIOR expressao_aritmetica','expressao_relacional',3,'p_expressao_relacional','sintatico.py',214),
  ('expressao_relacional -> expressao_aritmetica MAIOR EQUAL expressao_aritmetica','expressao_relacional',4,'p_expressao_relacional','sintatico.py',215),
  ('expressao_relacional -> expressao_aritmetica MENOR expressao_aritmetica','expressao_relacional',3,'p_expressao_relacional','sintatico.py',216),
  ('expressao_relacional -> expressao_aritmetica MENOR EQUAL expressao_aritmetica','expressao_relacional',4,'p_expressao_relacional','sintatico.py',217),
  ('expressao_relacional -> expressao_aritmetica NOT EQUAL expressao_aritmetica','expressao_relacional',4,'p_expressao_relacional','sintatico.py',218),
  ('expressao_relacional -> expressao_aritmetica EQUAL EQUAL expressao_aritmetica','expressao_relacional',4,'p_expressao_relacional','sintatico.py',219),
  ('expressao_aritmetica -> expressao_multiplicativa','expressao_aritmetica',1,'p_expressao_aritmetica','sintatico.py',229),
  ('expressao_aritmetica -> expressao_aritmetica PLUS expressao_aritmetica','expressao_aritmetica',3,'p_expressao_aritmetica','sintatico.py',230),
  ('expressao_aritmetica -> expressao_aritmetica MINUS expressao_aritmetica','expressao_aritmetica',3,'p_expressao_aritmetica','sintatico.py',231),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao_multiplicativa','sintatico.py',239),
  ('expressao_multiplicativa -> expressao_multiplicativa TIMES expressao_multiplicativa','expressao_multiplicativa',3,'p_expressao_multiplicativa','sintatico.py',240),
  ('expressao_multiplicativa -> expressao_multiplicativa DIVIDE expressao_multiplicativa','expressao_multiplicativa',3,'p_expressao_multiplicativa','sintatico.py',241),
  ('expressao_multiplicativa -> expressao_multiplicativa MODULO expressao_multiplicativa','expressao_multiplicativa',3,'p_expressao_multiplicativa','sintatico.py',242),
  ('expressao_unaria -> expressao_postfix','expressao_unaria',1,'p_expressao_unaria','sintatico.py',250),
  ('expressao_unaria -> PLUS expressao_unaria','expressao_unaria',2,'p_expressao_unaria','sintatico.py',251),
  ('expressao_unaria -> MINUS expressao_unaria','expressao_unaria',2,'p_expressao_unaria','sintatico.py',252),
  ('expressao_postfix -> primaria','expressao_postfix',1,'p_expressao_postfix','sintatico.py',262),
  ('expressao_postfix -> primaria LBRACKETS expression RBRACKETS','expressao_postfix',4,'p_expressao_postfix','sintatico.py',263),
  ('expressao_postfix -> primaria LPAREN argumentos RPAREN','expressao_postfix',4,'p_expressao_postfix','sintatico.py',264),
  ('expressao_postfix -> primaria DOT ID','expressao_postfix',3,'p_expressao_postfix','sintatico.py',265),
  ('argumentos -> array','argumentos',1,'p_argumentos','sintatico.py',275),
  ('argumentos -> empty','argumentos',1,'p_argumentos','sintatico.py',276),
  ('primaria -> ID','primaria',1,'p_primaria','sintatico.py',284),
  ('primaria -> NUMERO','primaria',1,'p_primaria','sintatico.py',285),
  ('primaria -> VSTRING','primaria',1,'p_primaria','sintatico.py',286),
  ('primaria -> LPAREN expression RPAREN','primaria',3,'p_primaria','sintatico.py',287),
]
